<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title>Kindle个人文档服务</title>
      <url>/2019/08/09/kindle-personal-document-service/</url>
      <content type="text">介绍



  通过Kindle个人文档服务，您可以免费将部分类型的文档直接发送至已注册至您的亚马逊Z.cn帐户的Fire平板电脑、Kindlle电子书阅读器和支持的Kindle阅读软件。 您可以通过授权的电子邮箱发送这些文档。

  Kindle个人文档服务与以下设备兼容：

  
    Fire平板电脑
    Kindle电子书阅读器
    Kindle iPhone/iPad/iPod touch阅读软件
    Kindle安卓阅读软件
  

  通过将文档发送至您的〖发送至Kindle〗电子邮箱，您可将其发送至兼容设备。您的〖发送至Kindle〗电子邮箱是系统在您注册兼容设备时为您分配的唯一电子邮箱。您通过Wi-Fi或USB传送至Kindle电子书阅读器的个人文档，亚马逊不会收取任何费用。但是如果您是使用iPhone、iPad、安卓手机或平板电脑上的无线数据服务传送个人文档，您的本地服务提供商可能会收取数据流量费用。有关〖发送至Kindle〗电子邮箱的详细信息，请参阅使用您的〖发送至Kindle〗电子邮箱。

  Kindle个人文档服务支持以下文件类型：

  
    Kindle格式（.MOBI、.AZW）
    Microsoft Word（.DOC、.DOCX）
    HTML（.HTML、.HTM）
    RTF (.RTF)
    文本(.TXT)
    JPEG（.JPEG、.JPG）
    GIF (.GIF)
    PNG (.PNG)
    BMP (.BMP)
    PDF (.PDF)
  


基于此个人文档服务的几种使用方式

直接发邮件

将个人邮箱添加至认可的邮箱列表即可使用，kindle电子邮箱一大串的数字字母记不住的话，是可以更改的



浏览器扩展 Push to Kindle


  Send web articles to your Kindle
Push to Kindle is a free service which lets you send web articles (news stories, blog posts, Wikipedia entries, etc.) to your Kindle or other e-reader for easy reading.

  Installing this extension will add a send to Kindle button to your Chrome browser. Simply click the Push to Kindle button on a page which you’d like to read on your Kindle.

  Use Push to Kindle to send a long web article to your Kindle to read it later. Use it to build up a reading list of articles for offline reading. Or simply use it to improve your reading experience.


装好扩展之后，在准备发送到kindle的文章页面点击扩展图标将出现如下页面(王垠的blog-学习的智慧)



Send to里填入自己的kindle邮箱，然后将扩展的发送邮箱kindle@fivefilters.org添加至kindle的认可邮箱列表，最后点击Send即发送成功，在我的内容-个人文档即可看到



亚马逊Kindle服务号

微信搜索“亚马逊Kindle服务号”并关注，菜单“在线服务”-“Send to Kindle”即可看详细介绍。绑定kindle邮箱之后就可以通过服务号发送文章、图片至kindle，非常方便。

KindleEar

简介


  这是一个运行在Google App Engine(GAE)上的Kindle个人推送服务应用，生成排版精美的杂志模式mobi/epub格式自动每天推送至您的Kindle或其他邮箱。

  此应用目前的主要功能有：

  
    支持类似Calibre的recipe格式的不限量RSS/ATOM或网页内容收集
    不限量自定义RSS，直接输入RSS/ATOM链接和标题即可自动推送
    多账号管理，支持多用户和多Kindle
    生成带图的杂志格式mobi或带图的有目录epub
    自动每天定时推送
    强大而且方便的邮件中转服务
    和Evernote/Pocket/Instapaper等系统的集成
  


github地址

todo 使用后再来补充
</content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> blog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title>PHP中tempnam函数dir参数不可访问却取系统tmp目录</title>
      <url>/2018/05/07/tempnam/</url>
      <content type="text">项目中需要将LaTex公式转为图片传给前端,实现方式是利用exec分别调用系统的latex/dvips/convert命令,最终生成png文件.

...

error_reporting(0); # not checking existence myself, that would be double.
if (chdir(&quot;tmp&quot;)===FALSE) { return '[directory access error, fix permissions]'; } #I should chech whether file creation is allowed to give a nice error for that problem case
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE); # TODO: set old value

$tfn = tempnam(getcwd(), 'PTX'); #file in tmp dir

#write temporary .tex file
if ( ($tex = fopen($tfn.'.tex', &quot;w&quot;))==FALSE) {
    return '[file access error] '.phplatex_cleantmp($tfn,$heredir);
}
fwrite($tex, $totex); 
fclose($tex);

# Run latex to create a .dvi.  Have it try to fix minor errors instead of breaking/pausing on them.
exec($path_to_latex.' --interaction=nonstopmode '.$tfn.'.tex');
if (!file_exists($tfn.&quot;.dvi&quot;)) {
    $log = file_get_contents($tfn.'.log'); #The log always exists, but now it's actually interesting since it'll contain an error
    return '[latex error, code follows]&amp;lt;pre&amp;gt;'.$totex.'&amp;lt;/pre&amp;gt;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;Log file:&amp;lt;/b&amp;gt;&amp;lt;pre&amp;gt;'.$log.'&amp;lt;/pre&amp;gt;&amp;lt;/p&amp;gt; '.phplatex_cleantmp($tfn,$heredir);
}

...



某次出问题,报错一直都是’[latex error, code follows…]’,即执行完latex命令转换tex的代码后检查dvi文件是否存在,打印出exec执行的代码,’/usr/bin/latex –interaction=nonstopmode /tmp/PTXBmQJee.tex’,上文有 chdir(“tmp”) 已经切换到当前目录下的tmp目录,而此tex却在/tmp下,打印发现getcwd()确实是当前目录的tmp,WTF,搜了下tempnam:


  tempnam

  Description
    string tempnam ( string $dir , string $prefix )

  Creates a file with a unique filename, with access permission set to 0600, in the specified directory. If the directory does not exist or is not writable, tempnam() may generate a file in the system’s temporary directory, and return the full path to that file, including its name.


dir不存在或者不可写的时候会取系统的临时目录,而前面的chdir的判断并没有确保tmp可写.给tmp加写权限即解决问题.

</content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> blog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title>拟配台式电脑配置记录</title>
      <url>/2018/04/27/computer/</url>
      <content type="text">主板
华擎 B360M Pro4  

CPU
i5 8400  
CPU风扇 彩融B81  
导热硅脂  ARCTIC  

内存
英睿达 8G  

显卡
蓝宝石 RX580  

硬盘
东芝 固态 240G  
    机械 4TB  

电源
讯景 XTR550  


机箱
乔思伯 U4  

显示器
DELL P2718Q  



其他
路由器 华硕RT-AC1200  
</content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> blog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title>LNMP环境搭建(Ubuntu16.04.3+nginx+mysql5.7+php7.2)</title>
      <url>/2018/02/20/lnmp/</url>
      <content type="text">安装
1.更新
apt-get update


2.安装nginx
apt-get nginx


3.安装mysql5.7
apt-get -y mysql-server-5.7 mysql-client-5.7


4.安装php7
apt直接安装会报错，需添加仓库
apt-get install -y software-properties-common
add-apt-repository ppa:ondrej/php

apt-get update
apt-cache search php7.2
apt-get install php7.2 php7.2-fpm ... php7.2-xml


配置

</content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> blog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title>恢复云数据库MySQL的备份文件到自建数据库遇到的权限问题</title>
      <url>/2017/12/11/mysql-trigger-privilege/</url>
      <content type="text">恢复过程参考阿里的的这篇帮助文档 “恢复云数据库MySQL的备份文件到自建数据库”

后来使用此自建数据库过程中遇到某几张表都出现如下报错

The user specified as a definer ('user_xxx'@'') does not exist


而此user根本不在自建数据库中，删User重新grant也无果，Google发现类似情况的是视图的权限问题，然后发现几张表共同点都是有trigger，查trigger的definer就是此user，重建trigger解决.
</content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> blog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title>Mac下brew安装MySQL后不知道密码，无法登陆</title>
      <url>/2017/09/07/mac-mysql-pwd/</url>
      <content type="text">
  关闭Mysql服务
      $ brew services stop mysql
    
  
  开启服务(跳过验证)
      $ mysqld_safe --skip-grant-tables
    
  
  无密码登录
      $ mysql -uroot -p
    
  
  
    设置密码

      UPDATE mysql.user SET authentication_string=PASSWORD('112358') WHERE User='root';
  FLUSH PRIVILEGES;
    
  
  开启MySQL服务，即可用新密码登录
      $ brew services start mysql
  $ mysql -uroot -p112358
    
  


</content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> blog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title>ssh免密登录</title>
      <url>/2017/08/24/ssh-by-key/</url>
      <content type="text">1) mkdir -p ~/.ssh/ecs

2) ssh-keygen -t rsa -b 4096 -C “xoinstein.com” -f ~/.ssh/ecs/xoinstein.com

3) ssh-copy-id -i ~/.ssh/ecs/xoinstein.com -p 22 root@xoinstein.com

4) ssh-add -K ~/.ssh/ecs/xoinstein.com

5) vi ~/.ssh/config 添加以下代码：

 Host ali-xo
 		HostName xoinstein.com
    AddKeysToAgent yes
    UseKeychain yes
    IdentityFile ~/.ssh/ecs/xoinstein.com

6) ssh ali-xo登陆服务器
</content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> blog </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
